** SIM FOR 2 SECONDS **

H = jnp.vstack(
    [
        H,
        jnp.array(
            [
                [1, 1, 0, 0, 0],
                [1, -1, 0, 0, 0],
                [0, 0, 1, 1, 0],
                [0, 0, 1, -1, 0],
                [1, 1, 1, 0, 1],
                [1, 1, -1, 0, 1],
                [1, 0, 1, 1, -1],
                [1, 0, 1, -1, -1],
            ]
        ),
    ]
)
Final Bound:
[[(-0.45741671, 2.43819618)]
 [(-4.94460726, 2.59157085)]
 [(-0.45741671, 2.43819618)]
 [(-4.94460726, 2.59157085)]
 [( 1.        , 3.        )]]


Sweep / coupling approach:
N = 4, couplings = [(0, 1), (2, 3), (1, 2), (0, 3)]
[[( 0.22737363, 2.03017783)]
 [(-2.94045615, 0.97930884)]
 [( 0.22737357, 2.03017759)]
 [(-2.94045591, 0.97930932)]
 [( 1.        , 3.        )]]


N = 6, couplings = [(0, 1), (2, 3)]
[[( 0.52108884, 1.79293823)]
 [(-2.26914263, 0.25225699)]
 [( 0.52108884, 1.79293823)]
 [(-2.26914263, 0.25225699)]
 [( 1.        , 3.        )]]

N = 10, couplings = [(0, 1), (2, 3), (1, 2), (0, 4)]
[[( 0.70872462,  1.6329819 )]
 [(-1.90506852, -0.14112122)]
 [( 0.7087667 ,  1.63173234)]
 [(-1.90477061, -0.15062548)]
 [( 1.        ,  3.        )]]

NOTE: this was for 3.14 seconds
N = 20, couplings = [(0, 1), (2, 3)]
[[( -2.85325408, 1.42389941)]
 [(-17.24201965, 8.70086002)]
 [( -2.85325456, 1.42389989)]
 [(-17.24213409, 8.70091534)]
 [(  1.        , 3.        )]]
